package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class GheAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGheAllPropertiesEquals(Ghe expected, Ghe actual) {
        assertGheAutoGeneratedPropertiesEquals(expected, actual);
        assertGheAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGheAllUpdatablePropertiesEquals(Ghe expected, Ghe actual) {
        assertGheUpdatableFieldsEquals(expected, actual);
        assertGheUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGheAutoGeneratedPropertiesEquals(Ghe expected, Ghe actual) {
        assertThat(expected)
            .as("Verify Ghe auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGheUpdatableFieldsEquals(Ghe expected, Ghe actual) {
        assertThat(expected)
            .as("Verify Ghe relevant properties")
            .satisfies(e -> assertThat(e.getTenGhe()).as("check tenGhe").isEqualTo(actual.getTenGhe()))
            .satisfies(e -> assertThat(e.getTinhTrang()).as("check tinhTrang").isEqualTo(actual.getTinhTrang()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGheUpdatableRelationshipsEquals(Ghe expected, Ghe actual) {
        assertThat(expected)
            .as("Verify Ghe relationships")
            .satisfies(e -> assertThat(e.getPhong()).as("check phong").isEqualTo(actual.getPhong()))
            .satisfies(e -> assertThat(e.getVe()).as("check ve").isEqualTo(actual.getVe()))
            .satisfies(e -> assertThat(e.getLoaiGhe()).as("check loaiGhe").isEqualTo(actual.getLoaiGhe()));
    }
}
