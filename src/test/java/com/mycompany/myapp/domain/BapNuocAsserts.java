package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BapNuocAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBapNuocAllPropertiesEquals(BapNuoc expected, BapNuoc actual) {
        assertBapNuocAutoGeneratedPropertiesEquals(expected, actual);
        assertBapNuocAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBapNuocAllUpdatablePropertiesEquals(BapNuoc expected, BapNuoc actual) {
        assertBapNuocUpdatableFieldsEquals(expected, actual);
        assertBapNuocUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBapNuocAutoGeneratedPropertiesEquals(BapNuoc expected, BapNuoc actual) {
        assertThat(expected)
            .as("Verify BapNuoc auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBapNuocUpdatableFieldsEquals(BapNuoc expected, BapNuoc actual) {
        assertThat(expected)
            .as("Verify BapNuoc relevant properties")
            .satisfies(e -> assertThat(e.getTenBapNuoc()).as("check tenBapNuoc").isEqualTo(actual.getTenBapNuoc()))
            .satisfies(e -> assertThat(e.getLogo()).as("check logo").isEqualTo(actual.getLogo()))
            .satisfies(e -> assertThat(e.getLogoContentType()).as("check logo contenty type").isEqualTo(actual.getLogoContentType()))
            .satisfies(e -> assertThat(e.getGiaTien()).as("check giaTien").isEqualTo(actual.getGiaTien()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBapNuocUpdatableRelationshipsEquals(BapNuoc expected, BapNuoc actual) {}
}
