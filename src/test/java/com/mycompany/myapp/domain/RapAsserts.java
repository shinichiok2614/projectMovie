package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RapAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRapAllPropertiesEquals(Rap expected, Rap actual) {
        assertRapAutoGeneratedPropertiesEquals(expected, actual);
        assertRapAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRapAllUpdatablePropertiesEquals(Rap expected, Rap actual) {
        assertRapUpdatableFieldsEquals(expected, actual);
        assertRapUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRapAutoGeneratedPropertiesEquals(Rap expected, Rap actual) {
        assertThat(expected)
            .as("Verify Rap auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRapUpdatableFieldsEquals(Rap expected, Rap actual) {
        assertThat(expected)
            .as("Verify Rap relevant properties")
            .satisfies(e -> assertThat(e.getTenRap()).as("check tenRap").isEqualTo(actual.getTenRap()))
            .satisfies(e -> assertThat(e.getDiaChi()).as("check diaChi").isEqualTo(actual.getDiaChi()))
            .satisfies(e -> assertThat(e.getThanhPho()).as("check thanhPho").isEqualTo(actual.getThanhPho()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRapUpdatableRelationshipsEquals(Rap expected, Rap actual) {
        assertThat(expected)
            .as("Verify Rap relationships")
            .satisfies(e -> assertThat(e.getCumRap()).as("check cumRap").isEqualTo(actual.getCumRap()));
    }
}
